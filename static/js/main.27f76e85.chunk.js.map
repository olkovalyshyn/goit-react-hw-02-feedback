{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","s","markers","totalForm","FeedbackOptions","options","onLeaveFeedback","map","option","styleBtn","type","name","onClick","Section","title","children","Notification","message","App","state","clickEventBtn","setState","countTotalFeedback","countPositiveFeedbackPercentage","this","Math","round","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iRAIe,SAASA,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,gCACE,qBAAIC,UAAWC,IAAEC,QAAjB,UACE,wCAAWP,KACX,2CAAcC,KACd,uCAAUC,KACV,qBAAIG,UAAWC,IAAEE,UAAjB,oBAAoCL,KACpC,qBAAIE,UAAWC,IAAEE,UAAjB,gCACsBJ,EADtB,UANJ,O,oBCRW,SAASK,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OAAOD,EAAQE,KAAI,SAACC,GAAD,OACjB,wBAEER,UAAWC,IAAEQ,SACbC,KAAK,SACLC,KAAMH,EACNI,QAAS,WACPN,EAAgBE,IANpB,SASGA,GARIA,M,oBCJI,SAASK,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,gCACE,oBAAIf,UAAWC,IAAEa,MAAjB,SAAyBA,IACxBC,KCLQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,I,ICsDEC,E,4MAjDbC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPuB,cAAgB,SAACZ,GACf,EAAKa,UAAS,SAACF,GACb,OAAO,eAAGX,EAASW,EAAMX,GAAU,O,EAIvCc,mBAAqB,WACnB,OAAO,EAAKH,MAAMxB,KAAO,EAAKwB,MAAMvB,QAAU,EAAKuB,MAAMtB,K,EAG3D0B,gCAAkC,WAChC,OAAQ,EAAKJ,MAAMxB,KAAO,EAAK2B,qBAAwB,K,uDAIvD,OACE,gCACE,cAACT,EAAD,CAASC,MAAM,wBAAf,SACE,cAACV,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBkB,KAAKJ,kBAG1B,cAACP,EAAD,CAASC,MAAM,aAAf,SACiC,IAA9BU,KAAKF,qBACJ,cAACN,EAAD,CAAcC,QAAQ,sBAEtB,cAACvB,EAAD,CACEC,KAAM6B,KAAKL,MAAMxB,KACjBC,QAAS4B,KAAKL,MAAMvB,QACpBC,IAAK2B,KAAKL,MAAMtB,IAChBC,MAAO0B,KAAKF,qBACZvB,mBAAoB0B,KAAKC,MACvBF,KAAKD,8C,GAxCHI,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,UAAY,8BAA8B,QAAU,8B,kBCAtED,EAAOC,QAAU,CAAC,SAAW,kCAAkC,MAAQ,iC,kBCAvED,EAAOC,QAAU,CAAC,MAAQ,0B","file":"static/js/main.27f76e85.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport s from \"./Statistics.module.css\";\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div>\r\n      <ul className={s.markers}>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li className={s.totalForm}>Total: {total}</li>\r\n        <li className={s.totalForm}>\r\n          Positive feedback: {positivePercentage}%\r\n        </li>\r\n      </ul>\r\n      ;\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return options.map((option) => (\r\n    <button\r\n      key={option}\r\n      className={s.styleBtn}\r\n      type=\"button\"\r\n      name={option}\r\n      onClick={() => {\r\n        onLeaveFeedback(option);\r\n      }}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Section.module.css\";\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n","import React from \"react\";\n\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  clickEventBtn = (option) => {\n    this.setState((state) => {\n      return { [option]: state[option] + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return (this.state.good / this.countTotalFeedback()) * 100;\n  };\n\n  render() {\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={[\"good\", \"neutral\", \"bad\"]}\n            onLeaveFeedback={this.clickEventBtn}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={Math.round(\n                this.countPositiveFeedbackPercentage()\n              )}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"totalForm\":\"Statistics_totalForm__bef_8\",\"markers\":\"Statistics_markers__2ZS1X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"styleBtn\":\"FeedbackOptions_styleBtn__nMs5U\",\"title\":\"FeedbackOptions_title__jJibW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__QCNSt\"};"],"sourceRoot":""}